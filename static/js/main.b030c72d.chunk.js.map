{"version":3,"sources":["images/Forest.jpg","apis/pixabay.js","apis/tenor.js","components/ImageList.js","components/GifList.js","components/SearchBar.js","components/Jumbotron.js","components/GlobalStyles.js","components/Themes.js","components/App.js","index.js"],"names":["module","exports","axios","create","baseURL","ImageList","props","images","results","map","result","className","key","id","style","backgroundImage","largeImageURL","GifList","gifs","gif","media","mediumgif","url","still","preview","SearchBar","state","term","searchType","index","onFormSubmit","event","preventDefault","onSubmit","this","type","placeholder","value","onChange","e","setState","target","class","data-toggle","aria-haspopup","aria-expanded","onClick","aria-hidden","React","Component","jumbotronStyle","Background","backgroundSize","backgroundPosition","textStyle","color","Jumbotron","themeToggler","GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","background","darkTheme","App","onSearchSubmit","a","response","pixabay","get","params","q","per_page","data","hits","tenor","renderContent","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b030c72d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Forest.0dc66c8a.jpg\";","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://pixabay.com/api/\",\r\n});","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.tenor.com/v1\",\r\n});","import React from \"react\";\r\nimport \"./ImageList.css\";\r\n\r\nconst ImageList = (props) => {\r\n  const images = props.results.map((result) => {\r\n    return (\r\n      <li className=\"image-grid__item\" key={result.id}>\r\n        <a className=\"grid-item\" >\r\n          <div\r\n            className=\"grid-item__image\"\r\n            style={{ backgroundImage: `url(${result.largeImageURL})` }}\r\n          ></div>\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"image-grid\">{images}</ul>;\r\n};\r\n\r\nexport default ImageList;","  \r\nimport React from \"react\";\r\nimport GifPlayer from \"react-gif-player\";\r\nimport \"./ImageList.css\";\r\n\r\nconst GifList = (props) => {\r\n  const gifs = props.results.map((result) => {\r\n    return (\r\n      <li className=\"image-grid__item\" key={result.id}>\r\n        <a className=\"grid-item\" >\r\n          <div className=\"grid-item__image\" key={result.id}>\r\n            <GifPlayer\r\n              gif={result.media[0].mediumgif.url}\r\n              still={result.media[0].mediumgif.preview}\r\n            />\r\n          </div>\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"image-grid\">{gifs}</ul>;\r\n};\r\n\r\nexport default GifList;","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {\r\n    term: \"\",\r\n    searchType: \"IMAGES\",\r\n    index: 0,\r\n  };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.term, this.state.searchType);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex container mt-4\">\r\n        <form className=\"input-group\" onSubmit={this.onFormSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Type something..\"\r\n            value={this.state.term}\r\n            onChange={(e) => {\r\n              this.setState({ term: e.target.value });\r\n            }}\r\n          />\r\n          <div class=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Type\r\n            </button>\r\n            <div class=\"dropdown-menu\">\r\n              <a\r\n                class={`dropdown-item ${\r\n                  this.state.index === 0 ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() =>\r\n                  this.setState({ index: 0, searchType: \"IMAGES\" })\r\n                }\r\n              >\r\n                Images\r\n              </a>\r\n              <a\r\n                class={`dropdown-item ${\r\n                  this.state.index === 1 ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => this.setState({ index: 1, searchType: \"GIFS\" })}\r\n                onSubmit={this.props.onSubmit}\r\n              >\r\n                Gifs\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary\">\r\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Background from \"../images/Forest.jpg\";\r\n\r\nvar jumbotronStyle = {\r\n  backgroundImage: `url(${Background})`,\r\n  backgroundSize: \"cover\",\r\n  backgroundPosition:\"fixed\"\r\n};\r\n\r\nvar textStyle = {\r\n  color: \"white\",\r\n};\r\n\r\nclass Jumbotron extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar justify-content-end\">\r\n          <i className=\"fas fa-moon\" onClick={this.props.themeToggler}></i>\r\n        </nav>\r\n        <section className=\"jumbotron text-center mb-3\" style={jumbotronStyle}>\r\n          <div className=\"container\">\r\n            <h1 className=\"font-weight-bold\" style={textStyle}>\r\n              What do you want to search?\r\n            </h1>\r\n            <SearchBar onSubmit={this.props.onSubmit} />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Jumbotron;","import { createGlobalStyle} from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.50s linear;\r\n  }\r\n  `\r\n","  \r\nexport const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"#FFF\",\r\n  background: \"#363537\",\r\n};\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#FAFAFA\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"#999\",\r\n};","import React from \"react\";\r\n\r\nimport pixabay from \"../apis/pixabay\";\r\nimport tenor from \"../apis/tenor\";\r\n\r\n\r\nimport ImageList from \"./ImageList\";\r\nimport GifList from \"./GifList\";\r\nimport Jumbotron from \"./Jumbotron\";\r\n\r\nimport{ThemeProvider} from \"styled-components\";\r\nimport {GlobalStyles } from \"./GlobalStyles\";\r\nimport { lightTheme, darkTheme } from \"./Themes\";\r\n\r\nclass App extends React.Component {\r\n  state = { results: [], type: \"IMAGES\", theme: \"light\" };\r\n\r\n   //DARK MODE\r\n   themeToggler = () => {\r\n    this.state.theme === \"light\"? this.setState({ theme: \"dark\" }): this.setState({ theme: \"light\" });\r\n  };\r\n\r\n  onSearchSubmit = async (term, searchType = \"IMAGES\") => {\r\n    var response = [];\r\n    if (searchType === \"IMAGES\") {\r\n      response = await pixabay.get(\"\", {\r\n        params: {\r\n          key: \"18789879-231187672e9da4d0fc075ff91\",\r\n          q: term,\r\n          per_page:101,\r\n        },\r\n      });\r\n      \r\n      this.setState({ results: response.data.hits, type: searchType });\r\n    } else {\r\n      response = await tenor.get(\"/search\", {\r\n        params: {\r\n          key: \"MDCWA8LM91BG\",\r\n          q: term,\r\n          \r\n        },\r\n      });\r\n      this.setState({ results: response.data.results, type: searchType });\r\n    }\r\n  };\r\n\r\n  renderContent() {\r\n    if (this.state.type === \"IMAGES\") {\r\n      return (\r\n        <div>\r\n          <ImageList results={this.state.results} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <GifList results={this.state.results} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider\r\n        theme={this.state.theme === \"light\" ? lightTheme : darkTheme}\r\n      >\r\n        <>\r\n          <GlobalStyles />\r\n          <div>\r\n            <Jumbotron\r\n              onSubmit={this.onSearchSubmit}\r\n              themeToggler={this.themeToggler}\r\n            />\r\n            {this.renderContent()}\r\n          </div>\r\n        </>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n     <App />,\r\n     document.querySelector(\"#root\")\r\n     );\r\n"],"sourceRoot":""}